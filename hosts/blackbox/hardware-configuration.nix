# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = with config.boot.kernelPackages; [zenpower];
  boot.blacklistedKernelModules = ["k10temp" "pn533_usb"];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/a59d7f8a-8c4e-4f81-a505-3401bcc813ba";
    fsType = "ext4";
    options = ["defaults" "noatime" "discard"];
  };

  fileSystems."/mnt/pagman" = {
    device = "/dev/disk/by-uuid/612E-4305";
    fsType = "exfat";
    options = ["nofail" "users" "iocharset=utf8" "x-systemd.device-timeout=5s"];
  };

  fileSystems."/mnt/windog" = {
    device = "/dev/disk/by-uuid/FAAC0206AC01BDDF";
    fsType = "ntfs-3g";
    options = ["nofail" "users"];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/9485-D3BB";
    fsType = "vfat";
    options = ["fmask=0022" "dmask=0022"];
  };

  swapDevices = [
    {
      device = "/var/lib/swapfile";
      size = 16 * 1024;
    }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;

  networking.interfaces.enp5s0.wakeOnLan.enable = true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  hardware.bluetooth.enable = true;
  hardware.bluetooth.powerOnBoot = true;
}
